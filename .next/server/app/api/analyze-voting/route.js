"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "app/api/analyze-voting/route";
exports.ids = ["app/api/analyze-voting/route"];
exports.modules = {

/***/ "next/dist/compiled/next-server/app-page.runtime.dev.js":
/*!*************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-page.runtime.dev.js" ***!
  \*************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/compiled/next-server/app-page.runtime.dev.js");

/***/ }),

/***/ "next/dist/compiled/next-server/app-route.runtime.dev.js":
/*!**************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-route.runtime.dev.js" ***!
  \**************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/compiled/next-server/app-route.runtime.dev.js");

/***/ }),

/***/ "fs":
/*!*********************!*\
  !*** external "fs" ***!
  \*********************/
/***/ ((module) => {

module.exports = require("fs");

/***/ }),

/***/ "path":
/*!***********************!*\
  !*** external "path" ***!
  \***********************/
/***/ ((module) => {

module.exports = require("path");

/***/ }),

/***/ "(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fanalyze-voting%2Froute&page=%2Fapi%2Fanalyze-voting%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fanalyze-voting%2Froute.ts&appDir=C%3A%5CUsers%5CLucas%5CDesktop%5CWorkspace%5CV%C3%B4ti%5Csrc%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=C%3A%5CUsers%5CLucas%5CDesktop%5CWorkspace%5CV%C3%B4ti&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!":

  !*** ./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fanalyze-voting%2Froute&page=%2Fapi%2Fanalyze-voting%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fanalyze-voting%2Froute.ts&appDir=C%3A%5CUsers%5CLucas%5CDesktop%5CWorkspace%5CV%C3%B4ti%5Csrc%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=C%3A%5CUsers%5CLucas%5CDesktop%5CWorkspace%5CV%C3%B4ti&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D! ***!
  \****************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   originalPathname: () => (/* binding */ originalPathname),\n/* harmony export */   patchFetch: () => (/* binding */ patchFetch),\n/* harmony export */   requestAsyncStorage: () => (/* binding */ requestAsyncStorage),\n/* harmony export */   routeModule: () => (/* binding */ routeModule),\n/* harmony export */   serverHooks: () => (/* binding */ serverHooks),\n/* harmony export */   staticGenerationAsyncStorage: () => (/* binding */ staticGenerationAsyncStorage)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/future/route-modules/app-route/module.compiled */ \"(rsc)/./node_modules/next/dist/server/future/route-modules/app-route/module.compiled.js\");\n/* harmony import */ var next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/future/route-kind */ \"(rsc)/./node_modules/next/dist/server/future/route-kind.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dist/server/lib/patch-fetch */ \"(rsc)/./node_modules/next/dist/server/lib/patch-fetch.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var C_Users_Lucas_Desktop_Workspace_V_ti_src_app_api_analyze_voting_route_ts__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./src/app/api/analyze-voting/route.ts */ \"(rsc)/./src/app/api/analyze-voting/route.ts\");\n\n\n\n\n// We inject the nextConfigOutput here so that we can use them in the route\n// module.\nconst nextConfigOutput = \"\"\nconst routeModule = new next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__.AppRouteRouteModule({\n    definition: {\n        kind: next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.APP_ROUTE,\n        page: \"/api/analyze-voting/route\",\n        pathname: \"/api/analyze-voting\",\n        filename: \"route\",\n        bundlePath: \"app/api/analyze-voting/route\"\n    },\n    resolvedPagePath: \"C:\\\\Users\\\\Lucas\\\\Desktop\\\\Workspace\\\\VÃ´ti\\\\src\\\\app\\\\api\\\\analyze-voting\\\\route.ts\",\n    nextConfigOutput,\n    userland: C_Users_Lucas_Desktop_Workspace_V_ti_src_app_api_analyze_voting_route_ts__WEBPACK_IMPORTED_MODULE_3__\n});\n// Pull out the exports that we need to expose from the module. This should\n// be eliminated when we've moved the other routes to the new format. These\n// are used to hook into the route.\nconst { requestAsyncStorage, staticGenerationAsyncStorage, serverHooks } = routeModule;\nconst originalPathname = \"/api/analyze-voting/route\";\nfunction patchFetch() {\n    return (0,next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__.patchFetch)({\n        serverHooks,\n        staticGenerationAsyncStorage\n    });\n}\n\n\n//# sourceMappingURL=app-route.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LWFwcC1sb2FkZXIuanM/bmFtZT1hcHAlMkZhcGklMkZhbmFseXplLXZvdGluZyUyRnJvdXRlJnBhZ2U9JTJGYXBpJTJGYW5hbHl6ZS12b3RpbmclMkZyb3V0ZSZhcHBQYXRocz0mcGFnZVBhdGg9cHJpdmF0ZS1uZXh0LWFwcC1kaXIlMkZhcGklMkZhbmFseXplLXZvdGluZyUyRnJvdXRlLnRzJmFwcERpcj1DJTNBJTVDVXNlcnMlNUNMdWNhcyU1Q0Rlc2t0b3AlNUNXb3Jrc3BhY2UlNUNWJUMzJUI0dGklNUNzcmMlNUNhcHAmcGFnZUV4dGVuc2lvbnM9dHN4JnBhZ2VFeHRlbnNpb25zPXRzJnBhZ2VFeHRlbnNpb25zPWpzeCZwYWdlRXh0ZW5zaW9ucz1qcyZyb290RGlyPUMlM0ElNUNVc2VycyU1Q0x1Y2FzJTVDRGVza3RvcCU1Q1dvcmtzcGFjZSU1Q1YlQzMlQjR0aSZpc0Rldj10cnVlJnRzY29uZmlnUGF0aD10c2NvbmZpZy5qc29uJmJhc2VQYXRoPSZhc3NldFByZWZpeD0mbmV4dENvbmZpZ091dHB1dD0mcHJlZmVycmVkUmVnaW9uPSZtaWRkbGV3YXJlQ29uZmlnPWUzMCUzRCEiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7O0FBQXNHO0FBQ3ZDO0FBQ2M7QUFDbUM7QUFDaEg7QUFDQTtBQUNBO0FBQ0Esd0JBQXdCLGdIQUFtQjtBQUMzQztBQUNBLGNBQWMseUVBQVM7QUFDdkI7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBLFlBQVk7QUFDWixDQUFDO0FBQ0Q7QUFDQTtBQUNBO0FBQ0EsUUFBUSxpRUFBaUU7QUFDekU7QUFDQTtBQUNBLFdBQVcsNEVBQVc7QUFDdEI7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUN1SDs7QUFFdkgiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly92b3RpLz85NDYxIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEFwcFJvdXRlUm91dGVNb2R1bGUgfSBmcm9tIFwibmV4dC9kaXN0L3NlcnZlci9mdXR1cmUvcm91dGUtbW9kdWxlcy9hcHAtcm91dGUvbW9kdWxlLmNvbXBpbGVkXCI7XG5pbXBvcnQgeyBSb3V0ZUtpbmQgfSBmcm9tIFwibmV4dC9kaXN0L3NlcnZlci9mdXR1cmUvcm91dGUta2luZFwiO1xuaW1wb3J0IHsgcGF0Y2hGZXRjaCBhcyBfcGF0Y2hGZXRjaCB9IGZyb20gXCJuZXh0L2Rpc3Qvc2VydmVyL2xpYi9wYXRjaC1mZXRjaFwiO1xuaW1wb3J0ICogYXMgdXNlcmxhbmQgZnJvbSBcIkM6XFxcXFVzZXJzXFxcXEx1Y2FzXFxcXERlc2t0b3BcXFxcV29ya3NwYWNlXFxcXFbDtHRpXFxcXHNyY1xcXFxhcHBcXFxcYXBpXFxcXGFuYWx5emUtdm90aW5nXFxcXHJvdXRlLnRzXCI7XG4vLyBXZSBpbmplY3QgdGhlIG5leHRDb25maWdPdXRwdXQgaGVyZSBzbyB0aGF0IHdlIGNhbiB1c2UgdGhlbSBpbiB0aGUgcm91dGVcbi8vIG1vZHVsZS5cbmNvbnN0IG5leHRDb25maWdPdXRwdXQgPSBcIlwiXG5jb25zdCByb3V0ZU1vZHVsZSA9IG5ldyBBcHBSb3V0ZVJvdXRlTW9kdWxlKHtcbiAgICBkZWZpbml0aW9uOiB7XG4gICAgICAgIGtpbmQ6IFJvdXRlS2luZC5BUFBfUk9VVEUsXG4gICAgICAgIHBhZ2U6IFwiL2FwaS9hbmFseXplLXZvdGluZy9yb3V0ZVwiLFxuICAgICAgICBwYXRobmFtZTogXCIvYXBpL2FuYWx5emUtdm90aW5nXCIsXG4gICAgICAgIGZpbGVuYW1lOiBcInJvdXRlXCIsXG4gICAgICAgIGJ1bmRsZVBhdGg6IFwiYXBwL2FwaS9hbmFseXplLXZvdGluZy9yb3V0ZVwiXG4gICAgfSxcbiAgICByZXNvbHZlZFBhZ2VQYXRoOiBcIkM6XFxcXFVzZXJzXFxcXEx1Y2FzXFxcXERlc2t0b3BcXFxcV29ya3NwYWNlXFxcXFbDtHRpXFxcXHNyY1xcXFxhcHBcXFxcYXBpXFxcXGFuYWx5emUtdm90aW5nXFxcXHJvdXRlLnRzXCIsXG4gICAgbmV4dENvbmZpZ091dHB1dCxcbiAgICB1c2VybGFuZFxufSk7XG4vLyBQdWxsIG91dCB0aGUgZXhwb3J0cyB0aGF0IHdlIG5lZWQgdG8gZXhwb3NlIGZyb20gdGhlIG1vZHVsZS4gVGhpcyBzaG91bGRcbi8vIGJlIGVsaW1pbmF0ZWQgd2hlbiB3ZSd2ZSBtb3ZlZCB0aGUgb3RoZXIgcm91dGVzIHRvIHRoZSBuZXcgZm9ybWF0LiBUaGVzZVxuLy8gYXJlIHVzZWQgdG8gaG9vayBpbnRvIHRoZSByb3V0ZS5cbmNvbnN0IHsgcmVxdWVzdEFzeW5jU3RvcmFnZSwgc3RhdGljR2VuZXJhdGlvbkFzeW5jU3RvcmFnZSwgc2VydmVySG9va3MgfSA9IHJvdXRlTW9kdWxlO1xuY29uc3Qgb3JpZ2luYWxQYXRobmFtZSA9IFwiL2FwaS9hbmFseXplLXZvdGluZy9yb3V0ZVwiO1xuZnVuY3Rpb24gcGF0Y2hGZXRjaCgpIHtcbiAgICByZXR1cm4gX3BhdGNoRmV0Y2goe1xuICAgICAgICBzZXJ2ZXJIb29rcyxcbiAgICAgICAgc3RhdGljR2VuZXJhdGlvbkFzeW5jU3RvcmFnZVxuICAgIH0pO1xufVxuZXhwb3J0IHsgcm91dGVNb2R1bGUsIHJlcXVlc3RBc3luY1N0b3JhZ2UsIHN0YXRpY0dlbmVyYXRpb25Bc3luY1N0b3JhZ2UsIHNlcnZlckhvb2tzLCBvcmlnaW5hbFBhdGhuYW1lLCBwYXRjaEZldGNoLCAgfTtcblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9YXBwLXJvdXRlLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fanalyze-voting%2Froute&page=%2Fapi%2Fanalyze-voting%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fanalyze-voting%2Froute.ts&appDir=C%3A%5CUsers%5CLucas%5CDesktop%5CWorkspace%5CV%C3%B4ti%5Csrc%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=C%3A%5CUsers%5CLucas%5CDesktop%5CWorkspace%5CV%C3%B4ti&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!\n");

/***/ }),

/***/ "(rsc)/./src/app/api/analyze-voting/route.ts":
/*!*********************************************!*\
  !*** ./src/app/api/analyze-voting/route.ts ***!
  \*********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   GET: () => (/* binding */ GET),\n/* harmony export */   POST: () => (/* binding */ POST)\n/* harmony export */ });\n/* harmony import */ var next_server__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/server */ \"(rsc)/./node_modules/next/dist/api/server.js\");\n/* harmony import */ var _lib_votingAnalyzer__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @/lib/votingAnalyzer */ \"(rsc)/./src/lib/votingAnalyzer.ts\");\n\n\nasync function GET(request) {\n    try {\n        const { searchParams } = new URL(request.url);\n        const count = parseInt(searchParams.get(\"count\") || \"10\");\n        const analyzer = new _lib_votingAnalyzer__WEBPACK_IMPORTED_MODULE_1__.VotingAnalyzer();\n        // Analisa os projetos mais discriminativos\n        const results = analyzer.analyzeProjects(count);\n        // Calcula estatÃ­sticas gerais\n        const totalProjects = analyzer.getProjectsCount();\n        const allProjects = analyzer.getAllProjects();\n        // Calcula distribuiÃ§Ã£o de scores\n        const allResults = analyzer.analyzeProjects(totalProjects);\n        // Calcula estatÃ­sticas dos deputados\n        const allDeputies = new Set();\n        allProjects.forEach((project)=>{\n            Object.keys(project.votes).forEach((deputy)=>allDeputies.add(deputy));\n        });\n        const scoreDistribution = {\n            high: allResults.filter((r)=>r.discriminationScore > 0.8).length,\n            medium: allResults.filter((r)=>r.discriminationScore > 0.5 && r.discriminationScore <= 0.8).length,\n            low: allResults.filter((r)=>r.discriminationScore <= 0.5).length\n        };\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            success: true,\n            data: {\n                topProjects: results,\n                stats: {\n                    deputiesCount: allDeputies.size,\n                    projectsCount: totalProjects,\n                    sampleDeputies: Array.from(allDeputies).slice(0, 5),\n                    sampleProjects: results.slice(0, 3).map((r)=>r.project.title)\n                },\n                summary: {\n                    totalProjects,\n                    analyzedProjects: count,\n                    averageDiscriminationScore: results.length > 0 ? results.reduce((sum, r)=>sum + r.discriminationScore, 0) / results.length : 0,\n                    mostDiscriminatingProject: results[0]?.project.title || \"N/A\",\n                    scoreDistribution\n                }\n            }\n        });\n    } catch (error) {\n        console.error(\"Erro na an\\xe1lise de vota\\xe7\\xf5es:\", error);\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            success: false,\n            error: \"Erro interno do servidor\",\n            details: error instanceof Error ? error.message : \"Erro desconhecido\"\n        }, {\n            status: 500\n        });\n    }\n}\nasync function POST(request) {\n    try {\n        const body = await request.json();\n        const { projectIds, action } = body;\n        const analyzer = new _lib_votingAnalyzer__WEBPACK_IMPORTED_MODULE_1__.VotingAnalyzer();\n        if (action === \"analyze-concordance\" && Array.isArray(projectIds)) {\n            // AnÃ¡lise de concordÃ¢ncia entre deputados\n            const concordanceMatrix = analyzer.calculateConcordanceMatrix(projectIds);\n            // Calcula estatÃ­sticas da matriz de concordÃ¢ncia\n            const deputies = Object.keys(concordanceMatrix);\n            let totalConcordance = 0;\n            let totalComparisons = 0;\n            deputies.forEach((deputy1)=>{\n                deputies.forEach((deputy2)=>{\n                    if (deputy1 !== deputy2) {\n                        const data = concordanceMatrix[deputy1][deputy2];\n                        if (data.totalComparisons > 0) {\n                            totalConcordance += data.concordance;\n                            totalComparisons++;\n                        }\n                    }\n                });\n            });\n            const averageConcordance = totalComparisons > 0 ? totalConcordance / totalComparisons : 0;\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                success: true,\n                data: {\n                    concordanceMatrix,\n                    summary: {\n                        deputiesAnalyzed: deputies.length,\n                        averageConcordance,\n                        projectsAnalyzed: projectIds.length,\n                        totalComparisons\n                    }\n                }\n            });\n        }\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            success: false,\n            error: \"A\\xe7\\xe3o n\\xe3o suportada ou par\\xe2metros inv\\xe1lidos\"\n        }, {\n            status: 400\n        });\n    } catch (error) {\n        console.error(\"Erro na an\\xe1lise de concord\\xe2ncia:\", error);\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            success: false,\n            error: \"Erro interno do servidor\",\n            details: error instanceof Error ? error.message : \"Erro desconhecido\"\n        }, {\n            status: 500\n        });\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./src/app/api/analyze-voting/route.ts\n");

/***/ }),

/***/ "(rsc)/./src/lib/votingAnalyzer.ts":
/*!***********************************!*\
  !*** ./src/lib/votingAnalyzer.ts ***!
  \***********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   VotingAnalyzer: () => (/* binding */ VotingAnalyzer)\n/* harmony export */ });\n/* harmony import */ var fs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! fs */ \"fs\");\n/* harmony import */ var fs__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(fs__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var path__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! path */ \"path\");\n/* harmony import */ var path__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(path__WEBPACK_IMPORTED_MODULE_1__);\n\n\nclass VotingAnalyzer {\n    constructor(){\n        this.projects = [];\n        this.loadVotingData();\n    }\n    loadVotingData() {\n        try {\n            const filePath = path__WEBPACK_IMPORTED_MODULE_1__.join(process.cwd(), \"public\", \"files\", \"politicians\", \"deputies\", \"votacoes deputados - 2022 a 2025.csv\");\n            if (!fs__WEBPACK_IMPORTED_MODULE_0__.existsSync(filePath)) {\n                console.error(\"Arquivo de vota\\xe7\\xf5es n\\xe3o encontrado:\", filePath);\n                return;\n            }\n            const csvContent = fs__WEBPACK_IMPORTED_MODULE_0__.readFileSync(filePath, \"utf-8\");\n            this.parseCSV(csvContent);\n        } catch (error) {\n            console.error(\"Erro ao carregar dados de vota\\xe7\\xe3o:\", error);\n        }\n    }\n    parseCSV(csvContent) {\n        const lines = csvContent.split(\"\\n\").filter((line)=>line.trim());\n        if (lines.length < 2) return;\n        // Primeira linha: cabeÃ§alhos (primeira coluna Ã© \"Parlamentar\", o resto sÃ£o as votaÃ§Ãµes)\n        const headers = this.parseCSVLine(lines[0]);\n        const votingHeaders = headers.slice(2); // Remove \"Parlamentar\" e \"VotaÃ§Ã£o\" vazia\n        // Cada projeto de votaÃ§Ã£o serÃ¡ extraÃ­do dos cabeÃ§alhos\n        votingHeaders.forEach((header, index)=>{\n            if (!header || header.trim() === \"\") return;\n            const project = {\n                id: `projeto-${index + 1}`,\n                title: header.trim(),\n                date: this.extractDateFromHeader(header),\n                votes: {}\n            };\n            // Para cada deputado (linhas 2 em diante), pegar o voto para esta votaÃ§Ã£o\n            for(let i = 1; i < lines.length; i++){\n                const values = this.parseCSVLine(lines[i]);\n                if (values.length < 3) continue;\n                const deputyName = values[0]?.trim();\n                const vote = values[index + 2]?.trim(); // +2 porque pulamos \"Parlamentar\" e \"VotaÃ§Ã£o\" vazia\n                if (deputyName && vote && vote !== \"-\") {\n                    project.votes[deputyName] = vote.toUpperCase();\n                }\n            }\n            // SÃ³ adiciona projetos que tenham pelo menos alguns votos\n            if (Object.keys(project.votes).length > 0) {\n                this.projects.push(project);\n            }\n        });\n        console.log(`Carregados ${this.projects.length} projetos de votaÃ§Ã£o`);\n    }\n    extractDateFromHeader(header) {\n        // Tenta extrair data do formato \"DD/MM/YYYY HH:MM:SS - ...\"\n        const dateMatch = header.match(/(\\d{2}\\/\\d{2}\\/\\d{4})/);\n        return dateMatch ? dateMatch[1] : \"Data n\\xe3o dispon\\xedvel\";\n    }\n    parseCSVLine(line) {\n        const values = [];\n        let current = \"\";\n        let inQuotes = false;\n        for(let i = 0; i < line.length; i++){\n            const char = line[i];\n            if (char === '\"') {\n                inQuotes = !inQuotes;\n            } else if (char === \",\" && !inQuotes) {\n                values.push(current.trim());\n                current = \"\";\n            } else {\n                current += char;\n            }\n        }\n        values.push(current.trim());\n        return values;\n    }\n    calculateEntropy(project) {\n        const voteCounts = this.getVoteCounts(project);\n        const total = voteCounts.yes + voteCounts.no + voteCounts.abstention + voteCounts.absence;\n        if (total === 0) return 0;\n        const probabilities = [\n            voteCounts.yes / total,\n            voteCounts.no / total,\n            voteCounts.abstention / total,\n            voteCounts.absence / total\n        ].filter((p)=>p > 0);\n        return -probabilities.reduce((sum, p)=>sum + p * Math.log2(p), 0);\n    }\n    calculateVariance(project) {\n        const votes = Object.values(project.votes);\n        const numericVotes = votes.map((vote)=>{\n            switch(vote){\n                case \"SIM\":\n                    return 1;\n                case \"NAO\":\n                    return 0;\n                case \"ABSTENCAO\":\n                    return 0.5;\n                case \"AUSENTE\":\n                    return 0.25;\n                default:\n                    return 0;\n            }\n        });\n        if (numericVotes.length === 0) return 0;\n        const mean = numericVotes.reduce((sum, vote)=>sum + vote, 0) / numericVotes.length;\n        const variance = numericVotes.reduce((sum, vote)=>sum + Math.pow(vote - mean, 2), 0) / numericVotes.length;\n        return variance;\n    }\n    calculatePolarizationIndex(project) {\n        const voteCounts = this.getVoteCounts(project);\n        const total = voteCounts.yes + voteCounts.no;\n        if (total === 0) return 0;\n        const yesRatio = voteCounts.yes / total;\n        const noRatio = voteCounts.no / total;\n        // Ãndice de polarizaÃ§Ã£o: quanto mais prÃ³ximo de 0.5/0.5, maior a polarizaÃ§Ã£o\n        return 1 - Math.abs(yesRatio - noRatio);\n    }\n    getVoteCounts(project) {\n        const counts = {\n            yes: 0,\n            no: 0,\n            abstention: 0,\n            absence: 0\n        };\n        const voteValues = Object.values(project.votes);\n        voteValues.forEach((vote)=>{\n            const normalizedVote = vote.trim();\n            switch(normalizedVote){\n                case \"SIM\":\n                case \"Sim\":\n                    counts.yes++;\n                    break;\n                case \"NAO\":\n                case \"N\\xc3O\":\n                case \"N\\xe3o\":\n                    counts.no++;\n                    break;\n                case \"ABSTENCAO\":\n                case \"Absten\\xe7\\xe3o\":\n                    counts.abstention++;\n                    break;\n                case \"AUSENTE\":\n                case \"N\\xe3o votou\":\n                    counts.absence++;\n                    break;\n                case \"OBSTRUCAO\":\n                case \"Obstru\\xe7\\xe3o\":\n                    counts.abstention++; // Tratamos obstruÃ§Ã£o como abstenÃ§Ã£o\n                    break;\n            }\n        });\n        // Debug log para o primeiro projeto\n        if (project.id === \"projeto-1\") {\n            const uniqueVotes = [\n                ...new Set(voteValues)\n            ];\n            console.log(\"=== DEBUG PRIMEIRO PROJETO ===\");\n            console.log(\"T\\xedtulo:\", project.title);\n            console.log(\"Votos \\xfanicos:\", uniqueVotes);\n            console.log(\"Contagem:\", counts);\n            console.log(\"Total de votos:\", voteValues.length);\n        }\n        return counts;\n    }\n    analyzeProjects(count = 10) {\n        const results = [];\n        for (const project of this.projects){\n            const entropy = this.calculateEntropy(project);\n            const variance = this.calculateVariance(project);\n            const polarizationIndex = this.calculatePolarizationIndex(project);\n            const voteCounts = this.getVoteCounts(project);\n            // Score de discriminaÃ§Ã£o: combina entropia, variÃ¢ncia e polarizaÃ§Ã£o\n            const discriminationScore = entropy * 0.4 + variance * 0.3 + polarizationIndex * 0.3;\n            results.push({\n                project,\n                entropy,\n                variance,\n                polarizationIndex,\n                discriminationScore,\n                yesVotes: voteCounts.yes,\n                noVotes: voteCounts.no,\n                abstentions: voteCounts.abstention,\n                absences: voteCounts.absence,\n                totalVotes: voteCounts.yes + voteCounts.no + voteCounts.abstention + voteCounts.absence\n            });\n        }\n        // Ordenar por score de discriminaÃ§Ã£o (maior para menor)\n        return results.sort((a, b)=>b.discriminationScore - a.discriminationScore).slice(0, count);\n    }\n    calculateConcordanceMatrix(projectIds) {\n        const matrix = {};\n        const projectsToAnalyze = projectIds ? this.projects.filter((p)=>projectIds.includes(p.id)) : this.projects;\n        // Obter lista de todos os deputados\n        const allDeputies = new Set();\n        projectsToAnalyze.forEach((project)=>{\n            Object.keys(project.votes).forEach((deputy)=>allDeputies.add(deputy));\n        });\n        const deputyList = Array.from(allDeputies);\n        // Inicializar matriz\n        deputyList.forEach((deputy1)=>{\n            matrix[deputy1] = {};\n            deputyList.forEach((deputy2)=>{\n                matrix[deputy1][deputy2] = {\n                    concordance: 0,\n                    totalComparisons: 0\n                };\n            });\n        });\n        // Calcular concordÃ¢ncias\n        projectsToAnalyze.forEach((project)=>{\n            deputyList.forEach((deputy1)=>{\n                deputyList.forEach((deputy2)=>{\n                    const vote1 = project.votes[deputy1];\n                    const vote2 = project.votes[deputy2];\n                    if (vote1 && vote2 && vote1 !== \"AUSENTE\" && vote2 !== \"AUSENTE\") {\n                        matrix[deputy1][deputy2].totalComparisons++;\n                        if (vote1 === vote2) {\n                            matrix[deputy1][deputy2].concordance++;\n                        }\n                    }\n                });\n            });\n        });\n        // Calcular percentuais de concordÃ¢ncia\n        deputyList.forEach((deputy1)=>{\n            deputyList.forEach((deputy2)=>{\n                const data = matrix[deputy1][deputy2];\n                if (data.totalComparisons > 0) {\n                    data.concordance = data.concordance / data.totalComparisons;\n                }\n            });\n        });\n        return matrix;\n    }\n    getProjectsCount() {\n        return this.projects.length;\n    }\n    getAllProjects() {\n        return [\n            ...this.projects\n        ];\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,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OUUsUUFBUUssS0FBSyxDQUFDcUUsUUFBUTtvQkFDcEMsTUFBTUssUUFBUS9FLFFBQVFLLEtBQUssQ0FBQ3NFLFFBQVE7b0JBRXBDLElBQUlHLFNBQVNDLFNBQVNELFVBQVUsYUFBYUMsVUFBVSxXQUFXO3dCQUNoRWQsTUFBTSxDQUFDUyxRQUFRLENBQUNDLFFBQVEsQ0FBQ0UsZ0JBQWdCO3dCQUV6QyxJQUFJQyxVQUFVQyxPQUFPOzRCQUNuQmQsTUFBTSxDQUFDUyxRQUFRLENBQUNDLFFBQVEsQ0FBQ0MsV0FBVzt3QkFDdEM7b0JBQ0Y7Z0JBQ0Y7WUFDRjtRQUNGO1FBRUEsdUNBQXVDO1FBQ3ZDTCxXQUFXMUUsT0FBTyxDQUFDNkUsQ0FBQUE7WUFDakJILFdBQVcxRSxPQUFPLENBQUM4RSxDQUFBQTtnQkFDakIsTUFBTUssT0FBT2YsTUFBTSxDQUFDUyxRQUFRLENBQUNDLFFBQVE7Z0JBQ3JDLElBQUlLLEtBQUtILGdCQUFnQixHQUFHLEdBQUc7b0JBQzdCRyxLQUFLSixXQUFXLEdBQUdJLEtBQUtKLFdBQVcsR0FBR0ksS0FBS0gsZ0JBQWdCO2dCQUM3RDtZQUNGO1FBQ0Y7UUFFQSxPQUFPWjtJQUNUO0lBRU9nQixtQkFBMkI7UUFDaEMsT0FBTyxJQUFJLENBQUMxRyxRQUFRLENBQUNpQixNQUFNO0lBQzdCO0lBRU8wRixpQkFBa0M7UUFDdkMsT0FBTztlQUFJLElBQUksQ0FBQzNHLFFBQVE7U0FBQztJQUMzQjtBQUNGIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vdm90aS8uL3NyYy9saWIvdm90aW5nQW5hbHl6ZXIudHM/ZDIyNCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgKiBhcyBmcyBmcm9tICdmcyc7XHJcbmltcG9ydCAqIGFzIHBhdGggZnJvbSAncGF0aCc7XHJcblxyXG5leHBvcnQgaW50ZXJmYWNlIFZvdGluZ1Byb2plY3Qge1xyXG4gIGlkOiBzdHJpbmc7XHJcbiAgdGl0bGU6IHN0cmluZztcclxuICBkYXRlOiBzdHJpbmc7XHJcbiAgdm90ZXM6IFJlY29yZDxzdHJpbmcsIHN0cmluZz47IC8vIGRlcHV0eU5hbWUgLT4gdm90ZSAoU0lNL05BTy9BQlNURU5DQU8vQVVTRU5URSlcclxufVxyXG5cclxuZXhwb3J0IGludGVyZmFjZSBBbmFseXNpc1Jlc3VsdCB7XHJcbiAgcHJvamVjdDogVm90aW5nUHJvamVjdDtcclxuICBlbnRyb3B5OiBudW1iZXI7XHJcbiAgdmFyaWFuY2U6IG51bWJlcjtcclxuICBwb2xhcml6YXRpb25JbmRleDogbnVtYmVyO1xyXG4gIGRpc2NyaW1pbmF0aW9uU2NvcmU6IG51bWJlcjtcclxuICB5ZXNWb3RlczogbnVtYmVyO1xyXG4gIG5vVm90ZXM6IG51bWJlcjtcclxuICBhYnN0ZW50aW9uczogbnVtYmVyO1xyXG4gIGFic2VuY2VzOiBudW1iZXI7XHJcbiAgdG90YWxWb3RlczogbnVtYmVyO1xyXG59XHJcblxyXG5leHBvcnQgaW50ZXJmYWNlIENvbmNvcmRhbmNlTWF0cml4IHtcclxuICBbZGVwdXR5MTogc3RyaW5nXToge1xyXG4gICAgW2RlcHV0eTI6IHN0cmluZ106IHtcclxuICAgICAgY29uY29yZGFuY2U6IG51bWJlcjtcclxuICAgICAgdG90YWxDb21wYXJpc29uczogbnVtYmVyO1xyXG4gICAgfTtcclxuICB9O1xyXG59XHJcblxyXG5leHBvcnQgY2xhc3MgVm90aW5nQW5hbHl6ZXIge1xyXG4gIHByaXZhdGUgcHJvamVjdHM6IFZvdGluZ1Byb2plY3RbXSA9IFtdO1xyXG4gIFxyXG4gIGNvbnN0cnVjdG9yKCkge1xyXG4gICAgdGhpcy5sb2FkVm90aW5nRGF0YSgpO1xyXG4gIH1cclxuXHJcbiAgcHJpdmF0ZSBsb2FkVm90aW5nRGF0YSgpOiB2b2lkIHtcclxuICAgIHRyeSB7XHJcbiAgICAgIGNvbnN0IGZpbGVQYXRoID0gcGF0aC5qb2luKHByb2Nlc3MuY3dkKCksICdwdWJsaWMnLCAnZmlsZXMnLCAncG9saXRpY2lhbnMnLCAnZGVwdXRpZXMnLCAndm90YWNvZXMgZGVwdXRhZG9zIC0gMjAyMiBhIDIwMjUuY3N2Jyk7XHJcbiAgICAgIFxyXG4gICAgICBpZiAoIWZzLmV4aXN0c1N5bmMoZmlsZVBhdGgpKSB7XHJcbiAgICAgICAgY29uc29sZS5lcnJvcignQXJxdWl2byBkZSB2b3Rhw6fDtWVzIG7Do28gZW5jb250cmFkbzonLCBmaWxlUGF0aCk7XHJcbiAgICAgICAgcmV0dXJuO1xyXG4gICAgICB9XHJcblxyXG4gICAgICBjb25zdCBjc3ZDb250ZW50ID0gZnMucmVhZEZpbGVTeW5jKGZpbGVQYXRoLCAndXRmLTgnKTtcclxuICAgICAgdGhpcy5wYXJzZUNTVihjc3ZDb250ZW50KTtcclxuICAgIH0gY2F0Y2ggKGVycm9yKSB7XHJcbiAgICAgIGNvbnNvbGUuZXJyb3IoJ0Vycm8gYW8gY2FycmVnYXIgZGFkb3MgZGUgdm90YcOnw6NvOicsIGVycm9yKTtcclxuICAgIH1cclxuICB9XHJcblxyXG4gIHByaXZhdGUgcGFyc2VDU1YoY3N2Q29udGVudDogc3RyaW5nKTogdm9pZCB7XHJcbiAgICBjb25zdCBsaW5lcyA9IGNzdkNvbnRlbnQuc3BsaXQoJ1xcbicpLmZpbHRlcihsaW5lID0+IGxpbmUudHJpbSgpKTtcclxuICAgIGlmIChsaW5lcy5sZW5ndGggPCAyKSByZXR1cm47XHJcblxyXG4gICAgLy8gUHJpbWVpcmEgbGluaGE6IGNhYmXDp2FsaG9zIChwcmltZWlyYSBjb2x1bmEgw6kgXCJQYXJsYW1lbnRhclwiLCBvIHJlc3RvIHPDo28gYXMgdm90YcOnw7VlcylcclxuICAgIGNvbnN0IGhlYWRlcnMgPSB0aGlzLnBhcnNlQ1NWTGluZShsaW5lc1swXSk7XHJcbiAgICBjb25zdCB2b3RpbmdIZWFkZXJzID0gaGVhZGVycy5zbGljZSgyKTsgLy8gUmVtb3ZlIFwiUGFybGFtZW50YXJcIiBlIFwiVm90YcOnw6NvXCIgdmF6aWFcclxuXHJcbiAgICAvLyBDYWRhIHByb2pldG8gZGUgdm90YcOnw6NvIHNlcsOhIGV4dHJhw61kbyBkb3MgY2FiZcOnYWxob3NcclxuICAgIHZvdGluZ0hlYWRlcnMuZm9yRWFjaCgoaGVhZGVyLCBpbmRleCkgPT4ge1xyXG4gICAgICBpZiAoIWhlYWRlciB8fCBoZWFkZXIudHJpbSgpID09PSAnJykgcmV0dXJuO1xyXG5cclxuICAgICAgY29uc3QgcHJvamVjdDogVm90aW5nUHJvamVjdCA9IHtcclxuICAgICAgICBpZDogYHByb2pldG8tJHtpbmRleCArIDF9YCxcclxuICAgICAgICB0aXRsZTogaGVhZGVyLnRyaW0oKSxcclxuICAgICAgICBkYXRlOiB0aGlzLmV4dHJhY3REYXRlRnJvbUhlYWRlcihoZWFkZXIpLFxyXG4gICAgICAgIHZvdGVzOiB7fVxyXG4gICAgICB9O1xyXG5cclxuICAgICAgLy8gUGFyYSBjYWRhIGRlcHV0YWRvIChsaW5oYXMgMiBlbSBkaWFudGUpLCBwZWdhciBvIHZvdG8gcGFyYSBlc3RhIHZvdGHDp8Ojb1xyXG4gICAgICBmb3IgKGxldCBpID0gMTsgaSA8IGxpbmVzLmxlbmd0aDsgaSsrKSB7XHJcbiAgICAgICAgY29uc3QgdmFsdWVzID0gdGhpcy5wYXJzZUNTVkxpbmUobGluZXNbaV0pO1xyXG4gICAgICAgIGlmICh2YWx1ZXMubGVuZ3RoIDwgMykgY29udGludWU7XHJcblxyXG4gICAgICAgIGNvbnN0IGRlcHV0eU5hbWUgPSB2YWx1ZXNbMF0/LnRyaW0oKTtcclxuICAgICAgICBjb25zdCB2b3RlID0gdmFsdWVzW2luZGV4ICsgMl0/LnRyaW0oKTsgLy8gKzIgcG9ycXVlIHB1bGFtb3MgXCJQYXJsYW1lbnRhclwiIGUgXCJWb3Rhw6fDo29cIiB2YXppYVxyXG5cclxuICAgICAgICBpZiAoZGVwdXR5TmFtZSAmJiB2b3RlICYmIHZvdGUgIT09ICctJykge1xyXG4gICAgICAgICAgcHJvamVjdC52b3Rlc1tkZXB1dHlOYW1lXSA9IHZvdGUudG9VcHBlckNhc2UoKTtcclxuICAgICAgICB9XHJcbiAgICAgIH1cclxuXHJcbiAgICAgIC8vIFPDsyBhZGljaW9uYSBwcm9qZXRvcyBxdWUgdGVuaGFtIHBlbG8gbWVub3MgYWxndW5zIHZvdG9zXHJcbiAgICAgIGlmIChPYmplY3Qua2V5cyhwcm9qZWN0LnZvdGVzKS5sZW5ndGggPiAwKSB7XHJcbiAgICAgICAgdGhpcy5wcm9qZWN0cy5wdXNoKHByb2plY3QpO1xyXG4gICAgICB9XHJcbiAgICB9KTtcclxuXHJcbiAgICBjb25zb2xlLmxvZyhgQ2FycmVnYWRvcyAke3RoaXMucHJvamVjdHMubGVuZ3RofSBwcm9qZXRvcyBkZSB2b3Rhw6fDo29gKTtcclxuICB9XHJcblxyXG4gIHByaXZhdGUgZXh0cmFjdERhdGVGcm9tSGVhZGVyKGhlYWRlcjogc3RyaW5nKTogc3RyaW5nIHtcclxuICAgIC8vIFRlbnRhIGV4dHJhaXIgZGF0YSBkbyBmb3JtYXRvIFwiREQvTU0vWVlZWSBISDpNTTpTUyAtIC4uLlwiXHJcbiAgICBjb25zdCBkYXRlTWF0Y2ggPSBoZWFkZXIubWF0Y2goLyhcXGR7Mn1cXC9cXGR7Mn1cXC9cXGR7NH0pLyk7XHJcbiAgICByZXR1cm4gZGF0ZU1hdGNoID8gZGF0ZU1hdGNoWzFdIDogJ0RhdGEgbsOjbyBkaXNwb27DrXZlbCc7XHJcbiAgfVxyXG5cclxuICBwcml2YXRlIHBhcnNlQ1NWTGluZShsaW5lOiBzdHJpbmcpOiBzdHJpbmdbXSB7XHJcbiAgICBjb25zdCB2YWx1ZXM6IHN0cmluZ1tdID0gW107XHJcbiAgICBsZXQgY3VycmVudCA9ICcnO1xyXG4gICAgbGV0IGluUXVvdGVzID0gZmFsc2U7XHJcbiAgICBcclxuICAgIGZvciAobGV0IGkgPSAwOyBpIDwgbGluZS5sZW5ndGg7IGkrKykge1xyXG4gICAgICBjb25zdCBjaGFyID0gbGluZVtpXTtcclxuICAgICAgXHJcbiAgICAgIGlmIChjaGFyID09PSAnXCInKSB7XHJcbiAgICAgICAgaW5RdW90ZXMgPSAhaW5RdW90ZXM7XHJcbiAgICAgIH0gZWxzZSBpZiAoY2hhciA9PT0gJywnICYmICFpblF1b3Rlcykge1xyXG4gICAgICAgIHZhbHVlcy5wdXNoKGN1cnJlbnQudHJpbSgpKTtcclxuICAgICAgICBjdXJyZW50ID0gJyc7XHJcbiAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgY3VycmVudCArPSBjaGFyO1xyXG4gICAgICB9XHJcbiAgICB9XHJcbiAgICBcclxuICAgIHZhbHVlcy5wdXNoKGN1cnJlbnQudHJpbSgpKTtcclxuICAgIHJldHVybiB2YWx1ZXM7XHJcbiAgfVxyXG5cclxuICBwdWJsaWMgY2FsY3VsYXRlRW50cm9weShwcm9qZWN0OiBWb3RpbmdQcm9qZWN0KTogbnVtYmVyIHtcclxuICAgIGNvbnN0IHZvdGVDb3VudHMgPSB0aGlzLmdldFZvdGVDb3VudHMocHJvamVjdCk7XHJcbiAgICBjb25zdCB0b3RhbCA9IHZvdGVDb3VudHMueWVzICsgdm90ZUNvdW50cy5ubyArIHZvdGVDb3VudHMuYWJzdGVudGlvbiArIHZvdGVDb3VudHMuYWJzZW5jZTtcclxuICAgIFxyXG4gICAgaWYgKHRvdGFsID09PSAwKSByZXR1cm4gMDtcclxuXHJcbiAgICBjb25zdCBwcm9iYWJpbGl0aWVzID0gW1xyXG4gICAgICB2b3RlQ291bnRzLnllcyAvIHRvdGFsLFxyXG4gICAgICB2b3RlQ291bnRzLm5vIC8gdG90YWwsXHJcbiAgICAgIHZvdGVDb3VudHMuYWJzdGVudGlvbiAvIHRvdGFsLFxyXG4gICAgICB2b3RlQ291bnRzLmFic2VuY2UgLyB0b3RhbFxyXG4gICAgXS5maWx0ZXIocCA9PiBwID4gMCk7XHJcblxyXG4gICAgcmV0dXJuIC1wcm9iYWJpbGl0aWVzLnJlZHVjZSgoc3VtLCBwKSA9PiBzdW0gKyAocCAqIE1hdGgubG9nMihwKSksIDApO1xyXG4gIH1cclxuXHJcbiAgcHVibGljIGNhbGN1bGF0ZVZhcmlhbmNlKHByb2plY3Q6IFZvdGluZ1Byb2plY3QpOiBudW1iZXIge1xyXG4gICAgY29uc3Qgdm90ZXMgPSBPYmplY3QudmFsdWVzKHByb2plY3Qudm90ZXMpO1xyXG4gICAgY29uc3QgbnVtZXJpY1ZvdGVzOiBudW1iZXJbXSA9IHZvdGVzLm1hcCh2b3RlID0+IHtcclxuICAgICAgc3dpdGNoICh2b3RlKSB7XHJcbiAgICAgICAgY2FzZSAnU0lNJzogcmV0dXJuIDE7XHJcbiAgICAgICAgY2FzZSAnTkFPJzogcmV0dXJuIDA7XHJcbiAgICAgICAgY2FzZSAnQUJTVEVOQ0FPJzogcmV0dXJuIDAuNTtcclxuICAgICAgICBjYXNlICdBVVNFTlRFJzogcmV0dXJuIDAuMjU7XHJcbiAgICAgICAgZGVmYXVsdDogcmV0dXJuIDA7XHJcbiAgICAgIH1cclxuICAgIH0pO1xyXG5cclxuICAgIGlmIChudW1lcmljVm90ZXMubGVuZ3RoID09PSAwKSByZXR1cm4gMDtcclxuXHJcbiAgICBjb25zdCBtZWFuID0gbnVtZXJpY1ZvdGVzLnJlZHVjZSgoc3VtOiBudW1iZXIsIHZvdGU6IG51bWJlcikgPT4gc3VtICsgdm90ZSwgMCkgLyBudW1lcmljVm90ZXMubGVuZ3RoO1xyXG4gICAgY29uc3QgdmFyaWFuY2UgPSBudW1lcmljVm90ZXMucmVkdWNlKChzdW06IG51bWJlciwgdm90ZTogbnVtYmVyKSA9PiBzdW0gKyBNYXRoLnBvdyh2b3RlIC0gbWVhbiwgMiksIDApIC8gbnVtZXJpY1ZvdGVzLmxlbmd0aDtcclxuXHJcbiAgICByZXR1cm4gdmFyaWFuY2U7XHJcbiAgfVxyXG5cclxuICBwdWJsaWMgY2FsY3VsYXRlUG9sYXJpemF0aW9uSW5kZXgocHJvamVjdDogVm90aW5nUHJvamVjdCk6IG51bWJlciB7XHJcbiAgICBjb25zdCB2b3RlQ291bnRzID0gdGhpcy5nZXRWb3RlQ291bnRzKHByb2plY3QpO1xyXG4gICAgY29uc3QgdG90YWwgPSB2b3RlQ291bnRzLnllcyArIHZvdGVDb3VudHMubm87XHJcbiAgICBcclxuICAgIGlmICh0b3RhbCA9PT0gMCkgcmV0dXJuIDA7XHJcblxyXG4gICAgY29uc3QgeWVzUmF0aW8gPSB2b3RlQ291bnRzLnllcyAvIHRvdGFsO1xyXG4gICAgY29uc3Qgbm9SYXRpbyA9IHZvdGVDb3VudHMubm8gLyB0b3RhbDtcclxuICAgIFxyXG4gICAgLy8gw41uZGljZSBkZSBwb2xhcml6YcOnw6NvOiBxdWFudG8gbWFpcyBwcsOzeGltbyBkZSAwLjUvMC41LCBtYWlvciBhIHBvbGFyaXphw6fDo29cclxuICAgIHJldHVybiAxIC0gTWF0aC5hYnMoeWVzUmF0aW8gLSBub1JhdGlvKTtcclxuICB9XHJcblxyXG4gIHByaXZhdGUgZ2V0Vm90ZUNvdW50cyhwcm9qZWN0OiBWb3RpbmdQcm9qZWN0KSB7XHJcbiAgICBjb25zdCBjb3VudHMgPSB7IHllczogMCwgbm86IDAsIGFic3RlbnRpb246IDAsIGFic2VuY2U6IDAgfTtcclxuICAgIGNvbnN0IHZvdGVWYWx1ZXMgPSBPYmplY3QudmFsdWVzKHByb2plY3Qudm90ZXMpO1xyXG4gICAgXHJcbiAgICB2b3RlVmFsdWVzLmZvckVhY2godm90ZSA9PiB7XHJcbiAgICAgIGNvbnN0IG5vcm1hbGl6ZWRWb3RlID0gdm90ZS50cmltKCk7XHJcbiAgICAgIFxyXG4gICAgICBzd2l0Y2ggKG5vcm1hbGl6ZWRWb3RlKSB7XHJcbiAgICAgICAgY2FzZSAnU0lNJzogXHJcbiAgICAgICAgY2FzZSAnU2ltJzogXHJcbiAgICAgICAgICBjb3VudHMueWVzKys7IFxyXG4gICAgICAgICAgYnJlYWs7XHJcbiAgICAgICAgY2FzZSAnTkFPJzogXHJcbiAgICAgICAgY2FzZSAnTsODTyc6XHJcbiAgICAgICAgY2FzZSAnTsOjbyc6IFxyXG4gICAgICAgICAgY291bnRzLm5vKys7IFxyXG4gICAgICAgICAgYnJlYWs7XHJcbiAgICAgICAgY2FzZSAnQUJTVEVOQ0FPJzogXHJcbiAgICAgICAgY2FzZSAnQWJzdGVuw6fDo28nOlxyXG4gICAgICAgICAgY291bnRzLmFic3RlbnRpb24rKzsgXHJcbiAgICAgICAgICBicmVhaztcclxuICAgICAgICBjYXNlICdBVVNFTlRFJzogXHJcbiAgICAgICAgY2FzZSAnTsOjbyB2b3RvdSc6XHJcbiAgICAgICAgICBjb3VudHMuYWJzZW5jZSsrOyBcclxuICAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgIGNhc2UgJ09CU1RSVUNBTyc6XHJcbiAgICAgICAgY2FzZSAnT2JzdHJ1w6fDo28nOlxyXG4gICAgICAgICAgY291bnRzLmFic3RlbnRpb24rKzsgLy8gVHJhdGFtb3Mgb2JzdHJ1w6fDo28gY29tbyBhYnN0ZW7Dp8Ojb1xyXG4gICAgICAgICAgYnJlYWs7XHJcbiAgICAgIH1cclxuICAgIH0pO1xyXG5cclxuICAgIC8vIERlYnVnIGxvZyBwYXJhIG8gcHJpbWVpcm8gcHJvamV0b1xyXG4gICAgaWYgKHByb2plY3QuaWQgPT09ICdwcm9qZXRvLTEnKSB7XHJcbiAgICAgIGNvbnN0IHVuaXF1ZVZvdGVzID0gWy4uLm5ldyBTZXQodm90ZVZhbHVlcyldO1xyXG4gICAgICBjb25zb2xlLmxvZygnPT09IERFQlVHIFBSSU1FSVJPIFBST0pFVE8gPT09Jyk7XHJcbiAgICAgIGNvbnNvbGUubG9nKCdUw610dWxvOicsIHByb2plY3QudGl0bGUpO1xyXG4gICAgICBjb25zb2xlLmxvZygnVm90b3Mgw7puaWNvczonLCB1bmlxdWVWb3Rlcyk7XHJcbiAgICAgIGNvbnNvbGUubG9nKCdDb250YWdlbTonLCBjb3VudHMpO1xyXG4gICAgICBjb25zb2xlLmxvZygnVG90YWwgZGUgdm90b3M6Jywgdm90ZVZhbHVlcy5sZW5ndGgpO1xyXG4gICAgfVxyXG5cclxuICAgIHJldHVybiBjb3VudHM7XHJcbiAgfVxyXG5cclxuICBwdWJsaWMgYW5hbHl6ZVByb2plY3RzKGNvdW50OiBudW1iZXIgPSAxMCk6IEFuYWx5c2lzUmVzdWx0W10ge1xyXG4gICAgY29uc3QgcmVzdWx0czogQW5hbHlzaXNSZXN1bHRbXSA9IFtdO1xyXG5cclxuICAgIGZvciAoY29uc3QgcHJvamVjdCBvZiB0aGlzLnByb2plY3RzKSB7XHJcbiAgICAgIGNvbnN0IGVudHJvcHkgPSB0aGlzLmNhbGN1bGF0ZUVudHJvcHkocHJvamVjdCk7XHJcbiAgICAgIGNvbnN0IHZhcmlhbmNlID0gdGhpcy5jYWxjdWxhdGVWYXJpYW5jZShwcm9qZWN0KTtcclxuICAgICAgY29uc3QgcG9sYXJpemF0aW9uSW5kZXggPSB0aGlzLmNhbGN1bGF0ZVBvbGFyaXphdGlvbkluZGV4KHByb2plY3QpO1xyXG4gICAgICBjb25zdCB2b3RlQ291bnRzID0gdGhpcy5nZXRWb3RlQ291bnRzKHByb2plY3QpO1xyXG4gICAgICBcclxuICAgICAgLy8gU2NvcmUgZGUgZGlzY3JpbWluYcOnw6NvOiBjb21iaW5hIGVudHJvcGlhLCB2YXJpw6JuY2lhIGUgcG9sYXJpemHDp8Ojb1xyXG4gICAgICBjb25zdCBkaXNjcmltaW5hdGlvblNjb3JlID0gKGVudHJvcHkgKiAwLjQpICsgKHZhcmlhbmNlICogMC4zKSArIChwb2xhcml6YXRpb25JbmRleCAqIDAuMyk7XHJcblxyXG4gICAgICByZXN1bHRzLnB1c2goe1xyXG4gICAgICAgIHByb2plY3QsXHJcbiAgICAgICAgZW50cm9weSxcclxuICAgICAgICB2YXJpYW5jZSxcclxuICAgICAgICBwb2xhcml6YXRpb25JbmRleCxcclxuICAgICAgICBkaXNjcmltaW5hdGlvblNjb3JlLFxyXG4gICAgICAgIHllc1ZvdGVzOiB2b3RlQ291bnRzLnllcyxcclxuICAgICAgICBub1ZvdGVzOiB2b3RlQ291bnRzLm5vLFxyXG4gICAgICAgIGFic3RlbnRpb25zOiB2b3RlQ291bnRzLmFic3RlbnRpb24sXHJcbiAgICAgICAgYWJzZW5jZXM6IHZvdGVDb3VudHMuYWJzZW5jZSxcclxuICAgICAgICB0b3RhbFZvdGVzOiB2b3RlQ291bnRzLnllcyArIHZvdGVDb3VudHMubm8gKyB2b3RlQ291bnRzLmFic3RlbnRpb24gKyB2b3RlQ291bnRzLmFic2VuY2VcclxuICAgICAgfSk7XHJcbiAgICB9XHJcblxyXG4gICAgLy8gT3JkZW5hciBwb3Igc2NvcmUgZGUgZGlzY3JpbWluYcOnw6NvIChtYWlvciBwYXJhIG1lbm9yKVxyXG4gICAgcmV0dXJuIHJlc3VsdHNcclxuICAgICAgLnNvcnQoKGEsIGIpID0+IGIuZGlzY3JpbWluYXRpb25TY29yZSAtIGEuZGlzY3JpbWluYXRpb25TY29yZSlcclxuICAgICAgLnNsaWNlKDAsIGNvdW50KTtcclxuICB9XHJcblxyXG4gIHB1YmxpYyBjYWxjdWxhdGVDb25jb3JkYW5jZU1hdHJpeChwcm9qZWN0SWRzPzogc3RyaW5nW10pOiBDb25jb3JkYW5jZU1hdHJpeCB7XHJcbiAgICBjb25zdCBtYXRyaXg6IENvbmNvcmRhbmNlTWF0cml4ID0ge307XHJcbiAgICBjb25zdCBwcm9qZWN0c1RvQW5hbHl6ZSA9IHByb2plY3RJZHMgXHJcbiAgICAgID8gdGhpcy5wcm9qZWN0cy5maWx0ZXIocCA9PiBwcm9qZWN0SWRzLmluY2x1ZGVzKHAuaWQpKVxyXG4gICAgICA6IHRoaXMucHJvamVjdHM7XHJcblxyXG4gICAgLy8gT2J0ZXIgbGlzdGEgZGUgdG9kb3Mgb3MgZGVwdXRhZG9zXHJcbiAgICBjb25zdCBhbGxEZXB1dGllcyA9IG5ldyBTZXQ8c3RyaW5nPigpO1xyXG4gICAgcHJvamVjdHNUb0FuYWx5emUuZm9yRWFjaChwcm9qZWN0ID0+IHtcclxuICAgICAgT2JqZWN0LmtleXMocHJvamVjdC52b3RlcykuZm9yRWFjaChkZXB1dHkgPT4gYWxsRGVwdXRpZXMuYWRkKGRlcHV0eSkpO1xyXG4gICAgfSk7XHJcblxyXG4gICAgY29uc3QgZGVwdXR5TGlzdCA9IEFycmF5LmZyb20oYWxsRGVwdXRpZXMpO1xyXG5cclxuICAgIC8vIEluaWNpYWxpemFyIG1hdHJpelxyXG4gICAgZGVwdXR5TGlzdC5mb3JFYWNoKGRlcHV0eTEgPT4ge1xyXG4gICAgICBtYXRyaXhbZGVwdXR5MV0gPSB7fTtcclxuICAgICAgZGVwdXR5TGlzdC5mb3JFYWNoKGRlcHV0eTIgPT4ge1xyXG4gICAgICAgIG1hdHJpeFtkZXB1dHkxXVtkZXB1dHkyXSA9IHsgY29uY29yZGFuY2U6IDAsIHRvdGFsQ29tcGFyaXNvbnM6IDAgfTtcclxuICAgICAgfSk7XHJcbiAgICB9KTtcclxuXHJcbiAgICAvLyBDYWxjdWxhciBjb25jb3Jkw6JuY2lhc1xyXG4gICAgcHJvamVjdHNUb0FuYWx5emUuZm9yRWFjaChwcm9qZWN0ID0+IHtcclxuICAgICAgZGVwdXR5TGlzdC5mb3JFYWNoKGRlcHV0eTEgPT4ge1xyXG4gICAgICAgIGRlcHV0eUxpc3QuZm9yRWFjaChkZXB1dHkyID0+IHtcclxuICAgICAgICAgIGNvbnN0IHZvdGUxID0gcHJvamVjdC52b3Rlc1tkZXB1dHkxXTtcclxuICAgICAgICAgIGNvbnN0IHZvdGUyID0gcHJvamVjdC52b3Rlc1tkZXB1dHkyXTtcclxuXHJcbiAgICAgICAgICBpZiAodm90ZTEgJiYgdm90ZTIgJiYgdm90ZTEgIT09ICdBVVNFTlRFJyAmJiB2b3RlMiAhPT0gJ0FVU0VOVEUnKSB7XHJcbiAgICAgICAgICAgIG1hdHJpeFtkZXB1dHkxXVtkZXB1dHkyXS50b3RhbENvbXBhcmlzb25zKys7XHJcbiAgICAgICAgICAgIFxyXG4gICAgICAgICAgICBpZiAodm90ZTEgPT09IHZvdGUyKSB7XHJcbiAgICAgICAgICAgICAgbWF0cml4W2RlcHV0eTFdW2RlcHV0eTJdLmNvbmNvcmRhbmNlKys7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgIH1cclxuICAgICAgICB9KTtcclxuICAgICAgfSk7XHJcbiAgICB9KTtcclxuXHJcbiAgICAvLyBDYWxjdWxhciBwZXJjZW50dWFpcyBkZSBjb25jb3Jkw6JuY2lhXHJcbiAgICBkZXB1dHlMaXN0LmZvckVhY2goZGVwdXR5MSA9PiB7XHJcbiAgICAgIGRlcHV0eUxpc3QuZm9yRWFjaChkZXB1dHkyID0+IHtcclxuICAgICAgICBjb25zdCBkYXRhID0gbWF0cml4W2RlcHV0eTFdW2RlcHV0eTJdO1xyXG4gICAgICAgIGlmIChkYXRhLnRvdGFsQ29tcGFyaXNvbnMgPiAwKSB7XHJcbiAgICAgICAgICBkYXRhLmNvbmNvcmRhbmNlID0gZGF0YS5jb25jb3JkYW5jZSAvIGRhdGEudG90YWxDb21wYXJpc29ucztcclxuICAgICAgICB9XHJcbiAgICAgIH0pO1xyXG4gICAgfSk7XHJcblxyXG4gICAgcmV0dXJuIG1hdHJpeDtcclxuICB9XHJcblxyXG4gIHB1YmxpYyBnZXRQcm9qZWN0c0NvdW50KCk6IG51bWJlciB7XHJcbiAgICByZXR1cm4gdGhpcy5wcm9qZWN0cy5sZW5ndGg7XHJcbiAgfVxyXG5cclxuICBwdWJsaWMgZ2V0QWxsUHJvamVjdHMoKTogVm90aW5nUHJvamVjdFtdIHtcclxuICAgIHJldHVybiBbLi4udGhpcy5wcm9qZWN0c107XHJcbiAgfVxyXG59XHJcbiJdLCJuYW1lcyI6WyJmcyIsInBhdGgiLCJWb3RpbmdBbmFseXplciIsImNvbnN0cnVjdG9yIiwicHJvamVjdHMiLCJsb2FkVm90aW5nRGF0YSIsImZpbGVQYXRoIiwiam9pbiIsInByb2Nlc3MiLCJjd2QiLCJleGlzdHNTeW5jIiwiY29uc29sZSIsImVycm9yIiwiY3N2Q29udGVudCIsInJlYWRGaWxlU3luYyIsInBhcnNlQ1NWIiwibGluZXMiLCJzcGxpdCIsImZpbHRlciIsImxpbmUiLCJ0cmltIiwibGVuZ3RoIiwiaGVhZGVycyIsInBhcnNlQ1NWTGluZSIsInZvdGluZ0hlYWRlcnMiLCJzbGljZSIsImZvckVhY2giLCJoZWFkZXIiLCJpbmRleCIsInByb2plY3QiLCJpZCIsInRpdGxlIiwiZGF0ZSIsImV4dHJhY3REYXRlRnJvbUhlYWRlciIsInZvdGVzIiwiaSIsInZhbHVlcyIsImRlcHV0eU5hbWUiLCJ2b3RlIiwidG9VcHBlckNhc2UiLCJPYmplY3QiLCJrZXlzIiwicHVzaCIsImxvZyIsImRhdGVNYXRjaCIsIm1hdGNoIiwiY3VycmVudCIsImluUXVvdGVzIiwiY2hhciIsImNhbGN1bGF0ZUVudHJvcHkiLCJ2b3RlQ291bnRzIiwiZ2V0Vm90ZUNvdW50cyIsInRvdGFsIiwieWVzIiwibm8iLCJhYnN0ZW50aW9uIiwiYWJzZW5jZSIsInByb2JhYmlsaXRpZXMiLCJwIiwicmVkdWNlIiwic3VtIiwiTWF0aCIsImxvZzIiLCJjYWxjdWxhdGVWYXJpYW5jZSIsIm51bWVyaWNWb3RlcyIsIm1hcCIsIm1lYW4iLCJ2YXJpYW5jZSIsInBvdyIsImNhbGN1bGF0ZVBvbGFyaXphdGlvbkluZGV4IiwieWVzUmF0aW8iLCJub1JhdGlvIiwiYWJzIiwiY291bnRzIiwidm90ZVZhbHVlcyIsIm5vcm1hbGl6ZWRWb3RlIiwidW5pcXVlVm90ZXMiLCJTZXQiLCJhbmFseXplUHJvamVjdHMiLCJjb3VudCIsInJlc3VsdHMiLCJlbnRyb3B5IiwicG9sYXJpemF0aW9uSW5kZXgiLCJkaXNjcmltaW5hdGlvblNjb3JlIiwieWVzVm90ZXMiLCJub1ZvdGVzIiwiYWJzdGVudGlvbnMiLCJhYnNlbmNlcyIsInRvdGFsVm90ZXMiLCJzb3J0IiwiYSIsImIiLCJjYWxjdWxhdGVDb25jb3JkYW5jZU1hdHJpeCIsInByb2plY3RJZHMiLCJtYXRyaXgiLCJwcm9qZWN0c1RvQW5hbHl6ZSIsImluY2x1ZGVzIiwiYWxsRGVwdXRpZXMiLCJkZXB1dHkiLCJhZGQiLCJkZXB1dHlMaXN0IiwiQXJyYXkiLCJmcm9tIiwiZGVwdXR5MSIsImRlcHV0eTIiLCJjb25jb3JkYW5jZSIsInRvdGFsQ29tcGFyaXNvbnMiLCJ2b3RlMSIsInZvdGUyIiwiZGF0YSIsImdldFByb2plY3RzQ291bnQiLCJnZXRBbGxQcm9qZWN0cyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./src/lib/votingAnalyzer.ts\n");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../../webpack-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = __webpack_require__.X(0, ["vendor-chunks/next"], () => (__webpack_exec__("(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fanalyze-voting%2Froute&page=%2Fapi%2Fanalyze-voting%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fanalyze-voting%2Froute.ts&appDir=C%3A%5CUsers%5CLucas%5CDesktop%5CWorkspace%5CV%C3%B4ti%5Csrc%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=C%3A%5CUsers%5CLucas%5CDesktop%5CWorkspace%5CV%C3%B4ti&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!")));
module.exports = __webpack_exports__;

})();